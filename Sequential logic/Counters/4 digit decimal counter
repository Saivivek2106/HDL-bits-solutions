module top_module (
    input clk,
    input reset,   // Synchronous active-high reset
    output reg [3:1] ena,
    output [15:0] q);
    
    onebit_decadecounter digit1(clk,reset,1'b1,q[3:0]);
    assign ena[1]=(q[3:0]==4'd9)?1'b1:1'b0;
    onebit_decadecounter digit2(clk,reset,ena[1],q[7:4]);
    assign ena[2]=(q[3:0]==4'd9 && q[7:4]==4'd9)?1'b1:1'b0;
    onebit_decadecounter digit3(clk,reset,ena[2],q[11:8]);
    assign ena[3]=(q[3:0]==4'd9 && q[7:4]==4'd9 && q[11:8]==4'd9)?1'b1:1'b0;
    onebit_decadecounter digit4(clk,reset,ena[3],q[15:12]);
endmodule
module onebit_decadecounter (
    input clk,
    input reset,        // Synchronous active-high reset
    input ena,
    output [3:0] q);
    //reg [3:0]count;
    always@(posedge clk)begin
        if(reset )
            q<=4'b0;
        else begin
            if(ena && q==4'd9)
                q<=4'b0;
            else if(ena && q<4'd9)
                q<=q+1;
           end
    end
endmodule

